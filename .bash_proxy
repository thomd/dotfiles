#!/usr/bin/env bash

proxy() {

  # default proxy
  local DEFAULT_PROXY="proxy3:8080"

  # some colors
  local ON="\033[0;32m✓\033[0m"
  local OFF="\033[0;31m✖\033[0m"
  grey() {
    echo -e "\033[1;30m"$@"\033[0m"
  }

  proxy_on() {

    # environment
    export HTTP_PROXY=$1
    export HTTPS_PROXY=$1
    export http_proxy=$1
    export https_proxy=$1

    # npm
    npm config set proxy $1
    npm config set https-proxy $1

    # git
    git config --global http.proxy $1
    git config --global https.proxy $1
  }

  proxy_off() {

    # environment
    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset http_proxy
    unset https_proxy

    # npm
    npm config delete proxy
    npm config delete https-proxy

    # git
    if [ -n "$(git config --global --get http.proxy)" ]; then
      git config --global --remove-section http
    fi
    if [ -n "$(git config --global --get https.proxy)" ]; then
      git config --global --remove-section https
    fi
  }

  proxy_print() {
    echo ""
    echo " $(grey 'Proxy Settings')"
    echo ""

    local ENV_PROXY=$(env | grep http_proxy)
    if [ -z "$ENV_PROXY" ]; then
      echo -e "  $OFF env"
    else
      echo -e "  $ON env  $(grey ${ENV_PROXY/http_proxy=http:\/\//})"
    fi

    local NPM_PROXY=$(npm config get proxy)
    if [ "$NPM_PROXY" == null ]; then
      echo -e "  $OFF npm"
    else
      echo -e "  $ON npm  $(grey ${NPM_PROXY/http:\/\//} | tr -d '/')"
    fi

    local GIT_PROXY=$(git config --global --get http.proxy)
    if [ -z "$GIT_PROXY" ]; then
      echo -e "  $OFF git"
    else
      echo -e "  $ON git  $(grey ${GIT_PROXY/http:\/\//})"
    fi
  }

  case "$1" in
    on )
      shift
      local HOST=${1:-proxy3:8080}
      local PROXY="http://$HOST"
      proxy_on "$PROXY"
      proxy_print
      ;;
    off )
      proxy_off
      proxy_print
      ;;
    -h | --help )
      echo -e "\n $(grey 'Usage: proxy [on <HOST:PORT>|off]')"
      ;;
    * )
      proxy_print
  esac
}
