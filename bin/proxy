#!/usr/bin/env bash
set -e

PROXY="http://proxy3:8080"
ON="\033[0;32m✓\033[0m"
OFF="\033[0;31m✖\033[0m"
grey() {
  echo -e "\033[1;30m"$@"\033[0m"
}

proxy_on() {
  npm config set proxy $PROXY
  npm config set https-proxy $PROXY
  git config --global http.proxy $PROXY
  git config --global https.proxy $PROXY
}

proxy_off() {
  npm config delete proxy
  npm config delete https-proxy
  if [ -n "$(git config --global --get http.proxy)" ]; then
    git config --global --remove-section http
  fi
  if [ -n "$(git config --global --get https.proxy)" ]; then
    git config --global --remove-section https
  fi
}

proxy_print() {
    echo ""
    echo " $(grey 'Proxy Settings:')"
    echo ""

    local ENV_PROXY=$(env | grep -i http_proxy)
    if [ -z "$ENV_PROXY" ]; then
      echo -e "  $OFF env"
    else
      echo -e "  $ON env  $(grey ${ENV_PROXY/http_proxy=http:\/\//})"
    fi

    local NPM_PROXY=$(npm config get proxy)
    if [ "$NPM_PROXY" == null ]; then
      echo -e "  $OFF npm"
    else
      echo -e "  $ON npm  $(grey ${NPM_PROXY/http:\/\//} | tr -d '/')"
    fi

    local GIT_PROXY=$(git config --global --get http.proxy)
    if [ -z "$GIT_PROXY" ]; then
      echo -e "  $OFF git"
    else
      echo -e "  $ON git  $(grey ${GIT_PROXY/http:\/\//})"
    fi
}

case "$1" in
  on )
    proxy_on
    proxy_print
    ;;
  off )
    proxy_off
    proxy_print
    ;;
  -h | --help )
    echo -e "\n $(grey 'Usage: proxy [on|off]')"
    exit 1
    ;;
  * )
    proxy_print
esac
exit 0

