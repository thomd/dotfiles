#!/usr/bin/env bash
[ -n "$DEBUG" ] && set -x

#
# download files from Logs folder
#
# files in /webdav/Sites/Logs/log_archive/ are saved for 30 Days
#
#
# USAGE
#
#    sfcc logs [options] [filename-pattern]
#
# OPTIONS
#
#    -d              downlaod
#    -f              force download
#    -t [N|all]      N days ago (default: today)
#    -I              list instances
#    -i NAME         use NAME as instances (and set as default)
#
# EXAMPLES
#
#    sfcc logs -d monitoring             // download monitoring logfiles from today
#    sfcc logs -d -t all                 // download all available logfiles
#

config="$HOME/.sfcc-logs"
basepath="/on/demandware.servlet/webdav/Sites/Logs/"
if [ -f $config ]; then
  host_envname="SFCC_HOST_$(cat $config)"
  host=${!host_envname}
  user_envname="SFCC_USER_$(cat $config)"
  user=${!user_envname}
fi
ago=0

list_instances() {
  local instance=`cat $config`
  echo ''
  env \
    | grep SFCC_HOST \
    | perl -pe 's/^SFCC_HOST_(.*)=(.*)$/\1 \2/g' \
    | awk -v I="$instance" -v G=`tput setaf 2` -v R=`tput sgr0` '{M=" ";if(I == $1){M="*"};printf(" %s %s%s%s#%s\n"), M, G, $1, R, $2 }' \
    | column -t -s '#'
}

while test $# -ne 0; do
  arg=$1
  shift
  case $arg in
    -h|--help)
      cat $0 | sed -n '/^#/p' | sed 1d | sed 's/#/ /g' \
        | perl -pe "s/(USAGE|OPTIONS|EXAMPLES)/$(tput setaf 0)\1$(tput sgr0)/"
      exit 1
      ;;
    -I)
      list_instances
      exit 0
      ;;
    -i)
      echo $1 > ${config}
      host_envname="SFCC_HOST_$1"
      host=${!host_envname}
      user_envname="SFCC_USER_$1"
      user=${!user_envname}
      shift
      ;;
    -d)
      download=1
      ;;
    -f)
      force_download=1
      ;;
    -t)
      ago=$1
      shift
      ;;
    *)
      filepattern=$arg
      ;;
  esac
done

echo -e "\n$(tput setaf 2)${host}$(tput sgr0)\n"

errorfile="${host}_$(date +"%Y%m%d_%H%M%S").error"
pagefile=`mktemp ./page-XXXXX`
urlfile=`mktemp ./url-XXXXX`
trap "rm $pagefile $urlfile" EXIT

/usr/local/opt/curl/bin/curl -vsN -u "$user" "https://${host}${basepath}" 2>$errorfile >$pagefile
status=$?
if [ $status == 0 ]; then
  [ -f $errorfile ] && rm $errorfile
else
  echo "$(tput setaf 1)error$(tput sgr0)"
fi

cat $pagefile \
  | sed -n '/.*<a href=".*\.log"><tt>.*/p' \
  | sed 's/.*<a href="\(.*\)"><tt>.*/\1/g' \
  | ( [[ $ago != 'all' ]] && sed -n /$(date -v -${ago}d +"%Y%m%d")/p || cat ) \
  | ( [[ $filepattern ]] && sed -n /$filepattern/p || cat ) \
  > $urlfile

if [ $download ]; then
  total=`wc -l $urlfile | awk '{print $1}'`
  i=0
  while ((i++)); read -r url; do
    file="`echo $url | sed 's/.*\/\(.*\)/\1/g'`"
    counter_color="$(tput setaf 0)"
    if [ ! -f $file ] || [ $force_download ]; then
      logname="$(basename ${url%.*})_${host}_$(date +"%Y%m%d_%H%M%S").error"
      /usr/local/opt/curl/bin/curl -v -s -u "$user" -O "https://${host}${url}" 2> $logname
      status=$?
      if [ $status == 0 ]; then
        counter_color=$(tput setaf 2)
        [ -f $logname ] && rm $logname
      else
        counter_color=$(tput setaf 1)
      fi
    fi
    echo "${counter_color}[$i/$total]$(tput sgr0) $file"
  done < $urlfile
else
  less $urlfile | sed "s/\(${filepattern}\)/$(tput sgr 0 1)$(tput setaf 2)\1$(tput sgr0)/g"
fi

exit 0
